@model bcpp.Models.SledovaneMy
@using bcpp.Helpers

@{
    ViewBag.Title = "Sledované akcie";
    var buys = true;
    WebGrid grid = new WebGrid(Model.sled, canSort: false);
    
    List<string> jmena = new List<string>();
    

}

@if(Request["action"] == "Go")
    {
        buys = Request["buys"].AsBool();
}

<script>
    $(function () {
        var seriesOptions = [],
        seriesCounter = 0,
        akcieIds = []; 

        @foreach (var d in Model.akcieIds)
        {
            @:akcieIds.push("@d");
        }

        nazvyAkcii = [];
        @foreach(var d in Model.akcieNames)
        {
            @:nazvyAkcii.push("@d");
        }
        // create the chart when all data is loaded
        createChart = function () {
            $('#sledovane-container').highcharts('StockChart', {

                    chart: {
                        zoomType: 'x'
                    },
                    navigator: {
                        adaptToUpdatedData: true
                    },
                    tooltip: {
                        pointFormat: '<span style="color:{point.color}">\u25CF</span> {series.name}: <b>{point.y:.2f} Kč</b><br/>'
                    },
                    rangeSelector: {
                        inputBoxWidth: 130,
                        buttons: [{
                            type: 'week',
                            count: 1,
                            text: '1t'
                        }, {
                            type: 'month',
                            count: 1,
                            text: '1m'
                        }, {
                            type: 'month',
                            count: 6,
                            text: '6m'
                        }, {
                            type: 'year',
                            count: 1,
                            text: '1r'
                        }, {
                            type: 'year',
                            count: 3,
                            text: '3r'
                        }, {
                            type: 'all',
                            text: 'Vše'
                        }],
                        selected: 3
                    },
                    xAxis: {
                        type: 'date',
                        labels: { format: "{value:%m %Y}" }
                    },

                    yAxis: {
                        title: {
                            text: 'Cena'
                        },
                        floor: 0,
                    },

                    title: {
                        text: 'Změny v cenách akcie'
                    },
                    scrollbar: {
                        liveRedraw: true
                    },
                    series: seriesOptions
                })
        
        };

        $.each(akcieIds, function (i, akcieId) {
            var url = '@Url.Action("GetData", "Akcie", new {id = "idecko", nakup = buys})';
            url = url.replace("idecko",akcieId);
            $.getJSON(url, function (data) {

                seriesOptions[i] = {
                    turboThreshold: 5330,
                    name: nazvyAkcii[i],
                    data: data
                };

                seriesCounter += 1;

                if (seriesCounter === akcieIds.length) {
                    createChart();
                }
            });
        });
    });
</script>

<h2>@ViewBag.Title</h2>

<p>
    @Html.ActionLink("Vytvořit novou", "Create",null, new { @class="btn btn-default" })
</p>

@grid.GetHtml(
    tableStyle: "table table-striped table-hover",
    columns:
    grid.Columns
    (
        grid.Column("nazevSledovane", "Název sledované"),
            grid.Column("nazevAkcie", "Akcie"),
            grid.Column("nazevFirmy", "Firma"),
        grid.Column("cenaNakup", "Cena nákup"),
        grid.Column("cenaProdej", "Cena prodej"),
        grid.Column("datum", "Ke dni", format: (item) => string.Format("{0:dd.MM.yyyy}",item.datum)),
        grid.Column(format: (item) => Html.ActionLink("  ", "Delete", new { id = item.idSledovane }, new { @class = "glyphicon glyphicon-trash", @title = "Vymazat" }))
    
    )
)

<form action="" method="get">
    <div class="right">
        <button class="btn btn-default" style="float:right" type="submit" name="action" value="Go">Změnit</button>
        <select id="buys" name="buys" style="float:right;padding: 7px;margin-right: 5px;">
            <option selected="@(Request["buys"] == "true")" value="true">Nákup</option>
            <option selected="@(Request["buys"] == "false")" value="false">Prodej</option>
        </select>
        <label for="buys" style="float:right; margin-top: 5px;">Aktuální druh ceny: </label>
    </div>
</form>

<div id="sledovane-container" style="width:100%; height:400px;"></div>
<br/><br />